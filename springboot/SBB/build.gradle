plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
    id("com.github.node-gradle.node") version "7.0.1"
}
node {
    download = true
    /**
     * node version
     */
    version = "20.10.0"

    /**
     * npm version
     */
    npmVersion = "10.2.3"
    nodeProjectDir = file("${projectDir}/src/main/resources/static")
}
group = 'com.study'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
}

tasks.named('test') {
    useJUnitPlatform()
}

subprojects {
    apply plugin: 'com.github.node-gradle.node'
}

// npm install
task vesselViewNpmInstall(type: NpmTask) {
    workingDir = file("${project.projectDir}/src/main/resources/static")
    args = ["install"]
}

// npm build
task vesselViewNpmBuild(type: NpmTask) {
    workingDir = file("${project.projectDir}/src/main/resources/static")
    args = ["run", "build"]
}

vesselViewNpmBuild.dependsOn vesselViewNpmInstall
compileJava.dependsOn vesselViewNpmBuild